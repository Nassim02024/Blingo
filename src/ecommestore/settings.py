"""
Django settings for ecommestore project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from decouple import config

import cloudinary
import cloudinary.uploader
import cloudinary.api
import cloudinary_storage
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ag)-2xlg8@nz7d!xuf&y%=+37&g%i@9$p5z(*g%iwb-vcm@zac'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    
    'jazzmin',
    
    'cloudinary',
    'cloudinary_storage',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    
     
    'core',
    'users',
    "createstorevendorform",
    "userdashbord",
    "commingsoon",
    "customer",
    "aboutus",
    "errorpage",
    "contactpage",
    "lang",
    "servece",
    

]


# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': config('CLOUDINARY_NAME'),
#     'API_KEY': config('API_KEY'),
#     'API_SECRET': config('API_SECRET')
# }
cloudinary.config(
    cloud_name=config('CLOUDINARY_NAME'),
    api_key=config('API_KEY'),
    api_secret=config('API_SECRET'),
    secure=True
)


STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    "django.middleware.locale.LocaleMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# لضغط الملفات (CSS, JS, ...etc)



ROOT_URLCONF = 'ecommestore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'core.context_processors.default',
                'django.template.context_processors.debug',
                "django.template.context_processors.request", 
                "django.template.context_processors.i18n",
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommestore.wsgi.application'






DB_LIVE = config('DB_LIVE')

if DB_LIVE in ['False', False]:
    
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:    
  DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT'),
    }
  }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/


from django.utils.translation import gettext_lazy as _

LANGUAGE_CODE = 'en'
USE_I18N = True
TIME_ZONE = 'UTC'
USE_L10N = True

USE_TZ = True

LANGUAGES = [
    ("fr", _("French")),
    ("en", _("English")),
    ("ar", _("Arabic")),
]

import os
LOCALE_PATHS = [
  BASE_DIR / 'locale'
]




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

import os
from pathlib import Path

# BASE_DIR = Path(__file__).resolve().parent.parent.parent

STATIC_URL = '/static/'
STATICFILES_DIRS = [
  BASE_DIR / 'core' / 'static',
  BASE_DIR / 'users' / 'static',
  BASE_DIR / 'aboutus' / 'static',
  BASE_DIR / 'commingsoon' / 'static',
  BASE_DIR / 'contactpage' / 'static',
  BASE_DIR / 'createstorevendorform' / 'static',
  BASE_DIR / 'customer' / 'static',
  BASE_DIR / 'errorpage' / 'static',
  BASE_DIR / 'userdashbord' / 'static',
  
  
]  
STATIC_ROOT = BASE_DIR / "staticfiles"     


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'



CSRF_TRUSTED_ORIGINS = [
    'https://blingo-production-0e82.up.railway.app',
    "http://127.0.0.1:8000",
    "https://blingoservic.com/",
]


JAZZMIN_SETTINGS = {
    "site_header": "control panel",
    "copyright": "codeLine",
    "welcome_sign": "hello and welcome to the control panel",
    "show_sidebar": True,
    "navigation_expanded": True,
}


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'  #اسم التطبيق ثم اسم الكلاس موديل 


LOGIN_URL = 'users:login_view'
LOGIN_REDIRECT_URL = '/'

# Email Setting
import os


# env_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), '.env')
# config = Config(repository=RepositoryEnv(env_path))


# caching
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': 'C:/Users/hp/django_cache',
        'TIMEOUT': 31536000, 
    }
}



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')  # أو ضعها مباشرة: 'your_email@gmail.com'
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')  # كلمة مرور التطبيق (وليس كلمة مرور Gmail العادية)
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER





STORAGES = {
    "default": {
        "BACKEND": "cloudinary_storage.storage.MediaCloudinaryStorage"
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage"
    }
}

DEFAULT_FILE_STORAGE = "cloudinary_storage.storage.MediaCloudinaryStorage"
STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"
